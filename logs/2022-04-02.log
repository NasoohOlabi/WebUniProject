[02-Apr-2022 07:16:07 Europe/Berlin] dashboard called
[02-Apr-2022 07:16:08 Europe/Berlin] dashboard called
[02-Apr-2022 07:16:22 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:16:22 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`   ORDER BY role_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:16:22 Europe/Berlin] Role dep fetch User
[02-Apr-2022 07:16:22 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:16:22 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:16:22 Europe/Berlin] Role dep [{"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":14},{"username":"NassouhAlOlabi","password":"202cb962ac59075b964b07152d234b70","first_name":"Nassouh","last_name":"AlOlabi","middle_name":"Yasser","profile_picture":null,"role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":15},{"username":"MSmith","password":"e268f98f247841960366c10ea099a67e","first_name":"Michell","last_name":"Smith","middle_name":"car","profile_picture":"MSmith.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":68},{"username":"BrandonFreeman","password":"e268f98f247841960366c10ea099a67e","first_name":"Brandon","last_name":"Freeman","middle_name":"M.","profile_picture":"BrandonFreeman.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":69},{"username":"ColleenDiaz","password":"e268f98f247841960366c10ea099a67e","first_name":"Colleen","last_name":"Diaz","middle_name":"L.","profile_picture":"ColleenDiaz.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":70},{"username":"NicoleFord","password":"e268f98f247841960366c10ea099a67e","first_name":"Nicole","last_name":"Ford","middle_name":"Nancy","profile_picture":"NicoleFord.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":71},{"username":"AddisonOlson","password":"e268f98f247841960366c10ea099a67e","first_name":"Addison","last_name":"Olson","middle_name":"Mike","profile_picture":"AddisonOlson.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":72},{"username":"DouglasFletcher","password":"e268f98f247841960366c10ea099a67e","first_name":"Douglas","last_name":"Fletcher","middle_name":"John","profile_picture":"DouglasFletcher.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":73},{"username":"FloydSteward","password":"e268f98f247841960366c10ea099a67e","first_name":"Floyd","last_name":"Steward","middle_name":"Jack","profile_picture":"FloydSteward.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":74},{"username":"JesseBrown","password":"e268f98f247841960366c10ea099a67e","first_name":"Jesse","last_name":"Brown","middle_name":"Axel","profile_picture":"JesseBrown.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":75},{"username":"OscarMorgan","password":"e268f98f247841960366c10ea099a67e","first_name":"Oscar","last_name":"Morgan","middle_name":"Gotee","profile_picture":"OscarMorgan.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":76},{"username":"SohamPalmer","password":"e268f98f247841960366c10ea099a67e","first_name":"Soham","last_name":"Palmer","middle_name":"Kid","profile_picture":"SohamPalmer.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":77},{"username":"EdithSanchez","password":"e268f98f247841960366c10ea099a67e","first_name":"Edith","last_name":"Sanchez","middle_name":"Blonde","profile_picture":"EdithSanchez.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":78},{"username":"KimSnyder","password":"e268f98f247841960366c10ea099a67e","first_name":"Kim","last_name":"Snyder","middle_name":"Red","profile_picture":"KimSnyder.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":79},{"username":"SandraNeal","password":"e268f98f247841960366c10ea099a67e","first_name":"Sandra","last_name":"Neal","middle_name":"Kim","profile_picture":"SandraNeal.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":80},{"username":"ToniRhodes","password":"e268f98f247841960366c10ea099a67e","first_name":"Toni","last_name":"Rhodes","middle_name":"Jordan","profile_picture":"ToniRhodes.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":81},{"username":"MarcDemo","password":"e268f98f247841960366c10ea099a67e","first_name":"Marc","last_name":"Demo","middle_name":"Angry","profile_picture":"MarcDemo.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":82},{"username":"NatashaNice","password":"e268f98f247841960366c10ea099a67e","first_name":"Natasha","last_name":"Nice","middle_name":"F.","profile_picture":"NatashaNice.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":83}]
[02-Apr-2022 07:16:22 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 60
[02-Apr-2022 07:16:22 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":60}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:16:22 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 60)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:16:22 Europe/Berlin] Role dep fetch User
[02-Apr-2022 07:16:22 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":61} options: {"limit":100,"override":false}
[02-Apr-2022 07:16:22 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [61]
[02-Apr-2022 07:16:22 Europe/Berlin] Role dep []
[02-Apr-2022 07:16:22 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 61
[02-Apr-2022 07:16:22 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":61}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:16:22 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 61)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:16:31 Europe/Berlin] more is requested specifically after 61
[02-Apr-2022 07:16:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":61,"op":">"} options: {"limit":30,"override":false}
[02-Apr-2022 07:16:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id > ?) ORDER BY role_id  LIMIT 30 ; with bindings : [61]
[02-Apr-2022 07:16:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Role"] ON_conditions: [] WHERE_conditions: {"Role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:16:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `Role`  WHERE (Role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:16:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission"] ON_conditions: [] WHERE_conditions: [] options: {"limit":100,"override":false}
[02-Apr-2022 07:16:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name FROM `Permission`   ORDER BY permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:16:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission","Role"] ON_conditions: [{"role_has_permission.permission_id":"permission.id"},{"role_has_permission.role_id":"role.id"}] WHERE_conditions: {"role.id":60} options: {"override":false}
[02-Apr-2022 07:16:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id, role.id as role_id, role.name as role_name FROM `Permission` JOIN `Role_Has_Permission` JOIN `Role` ON (role_has_permission.permission_id = permission.id) AND (role_has_permission.role_id = role.id) WHERE (role.id = ?) ORDER BY permission_id, role_has_permission_id, role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:17:02 Europe/Berlin] dashboard called
[02-Apr-2022 07:17:03 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:17:03 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`   ORDER BY role_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:17:03 Europe/Berlin] Role dep fetch User
[02-Apr-2022 07:17:03 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:03 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:17:03 Europe/Berlin] Role dep [{"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":14},{"username":"NassouhAlOlabi","password":"202cb962ac59075b964b07152d234b70","first_name":"Nassouh","last_name":"AlOlabi","middle_name":"Yasser","profile_picture":null,"role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":15},{"username":"MSmith","password":"e268f98f247841960366c10ea099a67e","first_name":"Michell","last_name":"Smith","middle_name":"car","profile_picture":"MSmith.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":68},{"username":"BrandonFreeman","password":"e268f98f247841960366c10ea099a67e","first_name":"Brandon","last_name":"Freeman","middle_name":"M.","profile_picture":"BrandonFreeman.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":69},{"username":"ColleenDiaz","password":"e268f98f247841960366c10ea099a67e","first_name":"Colleen","last_name":"Diaz","middle_name":"L.","profile_picture":"ColleenDiaz.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":70},{"username":"NicoleFord","password":"e268f98f247841960366c10ea099a67e","first_name":"Nicole","last_name":"Ford","middle_name":"Nancy","profile_picture":"NicoleFord.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":71},{"username":"AddisonOlson","password":"e268f98f247841960366c10ea099a67e","first_name":"Addison","last_name":"Olson","middle_name":"Mike","profile_picture":"AddisonOlson.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":72},{"username":"DouglasFletcher","password":"e268f98f247841960366c10ea099a67e","first_name":"Douglas","last_name":"Fletcher","middle_name":"John","profile_picture":"DouglasFletcher.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":73},{"username":"FloydSteward","password":"e268f98f247841960366c10ea099a67e","first_name":"Floyd","last_name":"Steward","middle_name":"Jack","profile_picture":"FloydSteward.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":74},{"username":"JesseBrown","password":"e268f98f247841960366c10ea099a67e","first_name":"Jesse","last_name":"Brown","middle_name":"Axel","profile_picture":"JesseBrown.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":75},{"username":"OscarMorgan","password":"e268f98f247841960366c10ea099a67e","first_name":"Oscar","last_name":"Morgan","middle_name":"Gotee","profile_picture":"OscarMorgan.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":76},{"username":"SohamPalmer","password":"e268f98f247841960366c10ea099a67e","first_name":"Soham","last_name":"Palmer","middle_name":"Kid","profile_picture":"SohamPalmer.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":77},{"username":"EdithSanchez","password":"e268f98f247841960366c10ea099a67e","first_name":"Edith","last_name":"Sanchez","middle_name":"Blonde","profile_picture":"EdithSanchez.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":78},{"username":"KimSnyder","password":"e268f98f247841960366c10ea099a67e","first_name":"Kim","last_name":"Snyder","middle_name":"Red","profile_picture":"KimSnyder.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":79},{"username":"SandraNeal","password":"e268f98f247841960366c10ea099a67e","first_name":"Sandra","last_name":"Neal","middle_name":"Kim","profile_picture":"SandraNeal.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":80},{"username":"ToniRhodes","password":"e268f98f247841960366c10ea099a67e","first_name":"Toni","last_name":"Rhodes","middle_name":"Jordan","profile_picture":"ToniRhodes.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":81},{"username":"MarcDemo","password":"e268f98f247841960366c10ea099a67e","first_name":"Marc","last_name":"Demo","middle_name":"Angry","profile_picture":"MarcDemo.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":82},{"username":"NatashaNice","password":"e268f98f247841960366c10ea099a67e","first_name":"Natasha","last_name":"Nice","middle_name":"F.","profile_picture":"NatashaNice.jpg","role_id":60,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":83}]
[02-Apr-2022 07:17:03 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 60
[02-Apr-2022 07:17:03 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":60}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:03 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 60)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:03 Europe/Berlin] Role dep fetch User
[02-Apr-2022 07:17:03 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":61} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:03 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [61]
[02-Apr-2022 07:17:03 Europe/Berlin] Role dep []
[02-Apr-2022 07:17:03 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 61
[02-Apr-2022 07:17:03 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":61}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:03 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 61)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:17:07 Europe/Berlin] this one failed topic_id
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:17:07 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:17:07 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 07:17:07 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:07 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:17:07 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":7}]
[02-Apr-2022 07:17:07 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:07 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":9} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 07:17:07 Europe/Berlin] Question dep [{"text":"hi","is_correct":1,"question_id":9,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":20},{"text":"bye","is_correct":0,"question_id":9,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":21},{"text":"happy","is_correct":0,"question_id":9,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":22}]
[02-Apr-2022 07:17:07 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 9
[02-Apr-2022 07:17:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":9}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 9)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["exam"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:17:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `exam`   ORDER BY exam_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:17:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:17:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:17:20 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Center_Has_Exam one_name: Exam many_name: Exam_Center middle_table: Exam_Center_Has_Exam middle_table_one_col: exam_center_has_exam.exam_id middle_table_many_col: exam_center_has_exam.exam_center_id row->id: 1
[02-Apr-2022 07:17:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam_Center","Exam_Center_Has_Exam"] ON_conditions: [{"exam_center.id":"exam_center_has_exam.exam_center_id"},{"exam_center_has_exam.exam_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam_center.id as exam_center_id, exam_center.name as exam_center_name, exam_center.description as exam_center_description, exam_center_has_exam.id as exam_center_has_exam_id, exam_center_has_exam.date as exam_center_has_exam_date, exam_center_has_exam.exam_id as exam_center_has_exam_exam_id, exam_center_has_exam.exam_center_id as exam_center_has_exam_exam_center_id FROM `Exam_Center` JOIN `Exam_Center_Has_Exam` ON (exam_center.id = exam_center_has_exam.exam_center_id) AND (exam_center_has_exam.exam_id = 1)  ORDER BY exam_center_id, exam_center_has_exam_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:20 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Exam many_name: Question middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.exam_id middle_table_many_col: exam_has_question.question_id row->id: 1
[02-Apr-2022 07:17:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Question","Exam_Has_Question"] ON_conditions: [{"question.id":"exam_has_question.question_id"},{"exam_has_question.exam_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:17:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Question` JOIN `Exam_Has_Question` ON (question.id = exam_has_question.question_id) AND (exam_has_question.exam_id = 1)  ORDER BY question_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:17:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["student"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:17:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `student`   ORDER BY student_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:17:54 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["student_took_exam"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:17:54 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student_took_exam.id as student_took_exam_id, student_took_exam.date as student_took_exam_date, student_took_exam.choice_id as student_took_exam_choice_id, student_took_exam.student_id as student_took_exam_student_id, student_took_exam.exam_center_id as student_took_exam_exam_center_id FROM `student_took_exam`   ORDER BY student_took_exam_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":68} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [68]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":69} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [69]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":70} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [70]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":71} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [71]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":72} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [72]
[02-Apr-2022 07:20:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":73} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [73]
[02-Apr-2022 07:20:42 Europe/Berlin] more is requested specifically after 73
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":73,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [73]
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:42 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:42 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":74} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [74]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":75} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [75]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":76} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [76]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":77} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [77]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":78} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [78]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":79} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [79]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":80} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [80]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":81} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [81]
[02-Apr-2022 07:20:43 Europe/Berlin] more is requested specifically after 81
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":81,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [81]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":82} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [82]
[02-Apr-2022 07:20:43 Europe/Berlin] more is requested specifically after 82
[02-Apr-2022 07:20:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":82,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 07:20:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [82]
[02-Apr-2022 07:20:49 Europe/Berlin] dashboard called
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":68} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [68]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":69} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [69]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":70} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [70]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":71} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [71]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":72} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [72]
[02-Apr-2022 07:20:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":73} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [73]
[02-Apr-2022 07:20:52 Europe/Berlin] more is requested specifically after 73
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":73,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [73]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":74} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [74]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":75} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [75]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":76} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [76]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":77} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [77]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":78} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [78]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":79} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [79]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":80} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [80]
[02-Apr-2022 07:20:52 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":81} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:52 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [81]
[02-Apr-2022 07:20:53 Europe/Berlin] more is requested specifically after 81
[02-Apr-2022 07:20:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":81,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 07:20:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [81]
[02-Apr-2022 07:20:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":60} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [60]
[02-Apr-2022 07:20:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":82} options: {"limit":100,"override":false}
[02-Apr-2022 07:20:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [82]
[02-Apr-2022 07:20:53 Europe/Berlin] more is requested specifically after 82
[02-Apr-2022 07:20:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":82,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 07:20:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [82]
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:21:13 Europe/Berlin] this one failed topic_id
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:13 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:13 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 07:21:13 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:13 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:13 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":7}]
[02-Apr-2022 07:21:13 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:13 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":9} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 07:21:13 Europe/Berlin] Question dep [{"text":"hi","is_correct":1,"question_id":9,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":20},{"text":"bye","is_correct":0,"question_id":9,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":21},{"text":"happy","is_correct":0,"question_id":9,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":22}]
[02-Apr-2022 07:21:13 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 9
[02-Apr-2022 07:21:13 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":9}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:13 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 9)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:14 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["exam"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:21:14 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `exam`   ORDER BY exam_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:21:14 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:14 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:14 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Center_Has_Exam one_name: Exam many_name: Exam_Center middle_table: Exam_Center_Has_Exam middle_table_one_col: exam_center_has_exam.exam_id middle_table_many_col: exam_center_has_exam.exam_center_id row->id: 1
[02-Apr-2022 07:21:14 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam_Center","Exam_Center_Has_Exam"] ON_conditions: [{"exam_center.id":"exam_center_has_exam.exam_center_id"},{"exam_center_has_exam.exam_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:14 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam_center.id as exam_center_id, exam_center.name as exam_center_name, exam_center.description as exam_center_description, exam_center_has_exam.id as exam_center_has_exam_id, exam_center_has_exam.date as exam_center_has_exam_date, exam_center_has_exam.exam_id as exam_center_has_exam_exam_id, exam_center_has_exam.exam_center_id as exam_center_has_exam_exam_center_id FROM `Exam_Center` JOIN `Exam_Center_Has_Exam` ON (exam_center.id = exam_center_has_exam.exam_center_id) AND (exam_center_has_exam.exam_id = 1)  ORDER BY exam_center_id, exam_center_has_exam_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:14 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Exam many_name: Question middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.exam_id middle_table_many_col: exam_has_question.question_id row->id: 1
[02-Apr-2022 07:21:14 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Question","Exam_Has_Question"] ON_conditions: [{"question.id":"exam_has_question.question_id"},{"exam_has_question.exam_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:14 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Question` JOIN `Exam_Has_Question` ON (question.id = exam_has_question.question_id) AND (exam_has_question.exam_id = 1)  ORDER BY question_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["exam_center"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam_center.id as exam_center_id, exam_center.name as exam_center_name, exam_center.description as exam_center_description FROM `exam_center`   ORDER BY exam_center_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:21:15 Europe/Berlin] Exam_Center dep fetch Student_Took_Exam
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student_Took_Exam"] ON_conditions: [] WHERE_conditions: {"student_took_exam.exam_center_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student_took_exam.id as student_took_exam_id, student_took_exam.date as student_took_exam_date, student_took_exam.choice_id as student_took_exam_choice_id, student_took_exam.student_id as student_took_exam_student_id, student_took_exam.exam_center_id as student_took_exam_exam_center_id FROM `Student_Took_Exam`  WHERE (student_took_exam.exam_center_id = ?) ORDER BY student_took_exam_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:15 Europe/Berlin] Exam_Center dep []
[02-Apr-2022 07:21:15 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Center_Has_Exam one_name: Exam_Center many_name: Exam middle_table: Exam_Center_Has_Exam middle_table_one_col: exam_center_has_exam.exam_center_id middle_table_many_col: exam_center_has_exam.exam_id row->id: 1
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Center_Has_Exam"] ON_conditions: [{"exam.id":"exam_center_has_exam.exam_id"},{"exam_center_has_exam.exam_center_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_center_has_exam.id as exam_center_has_exam_id, exam_center_has_exam.date as exam_center_has_exam_date, exam_center_has_exam.exam_id as exam_center_has_exam_exam_id, exam_center_has_exam.exam_center_id as exam_center_has_exam_exam_center_id FROM `Exam` JOIN `Exam_Center_Has_Exam` ON (exam.id = exam_center_has_exam.exam_id) AND (exam_center_has_exam.exam_center_id = 1)  ORDER BY exam_id, exam_center_has_exam_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:15 Europe/Berlin] Exam_Center dep fetch Student_Took_Exam
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student_Took_Exam"] ON_conditions: [] WHERE_conditions: {"student_took_exam.exam_center_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student_took_exam.id as student_took_exam_id, student_took_exam.date as student_took_exam_date, student_took_exam.choice_id as student_took_exam_choice_id, student_took_exam.student_id as student_took_exam_student_id, student_took_exam.exam_center_id as student_took_exam_exam_center_id FROM `Student_Took_Exam`  WHERE (student_took_exam.exam_center_id = ?) ORDER BY student_took_exam_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:15 Europe/Berlin] Exam_Center dep []
[02-Apr-2022 07:21:15 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Center_Has_Exam one_name: Exam_Center many_name: Exam middle_table: Exam_Center_Has_Exam middle_table_one_col: exam_center_has_exam.exam_center_id middle_table_many_col: exam_center_has_exam.exam_id row->id: 2
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Center_Has_Exam"] ON_conditions: [{"exam.id":"exam_center_has_exam.exam_id"},{"exam_center_has_exam.exam_center_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_center_has_exam.id as exam_center_has_exam_id, exam_center_has_exam.date as exam_center_has_exam_date, exam_center_has_exam.exam_id as exam_center_has_exam_exam_id, exam_center_has_exam.exam_center_id as exam_center_has_exam_exam_center_id FROM `Exam` JOIN `Exam_Center_Has_Exam` ON (exam.id = exam_center_has_exam.exam_id) AND (exam_center_has_exam.exam_center_id = 2)  ORDER BY exam_id, exam_center_has_exam_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:15 Europe/Berlin] Exam_Center dep fetch Student_Took_Exam
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student_Took_Exam"] ON_conditions: [] WHERE_conditions: {"student_took_exam.exam_center_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student_took_exam.id as student_took_exam_id, student_took_exam.date as student_took_exam_date, student_took_exam.choice_id as student_took_exam_choice_id, student_took_exam.student_id as student_took_exam_student_id, student_took_exam.exam_center_id as student_took_exam_exam_center_id FROM `Student_Took_Exam`  WHERE (student_took_exam.exam_center_id = ?) ORDER BY student_took_exam_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 07:21:15 Europe/Berlin] Exam_Center dep []
[02-Apr-2022 07:21:15 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Center_Has_Exam one_name: Exam_Center many_name: Exam middle_table: Exam_Center_Has_Exam middle_table_one_col: exam_center_has_exam.exam_center_id middle_table_many_col: exam_center_has_exam.exam_id row->id: 3
[02-Apr-2022 07:21:15 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Center_Has_Exam"] ON_conditions: [{"exam.id":"exam_center_has_exam.exam_id"},{"exam_center_has_exam.exam_center_id":3}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:15 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_center_has_exam.id as exam_center_has_exam_id, exam_center_has_exam.date as exam_center_has_exam_date, exam_center_has_exam.exam_id as exam_center_has_exam_exam_id, exam_center_has_exam.exam_center_id as exam_center_has_exam_exam_center_id FROM `Exam` JOIN `Exam_Center_Has_Exam` ON (exam.id = exam_center_has_exam.exam_id) AND (exam_center_has_exam.exam_center_id = 3)  ORDER BY exam_id, exam_center_has_exam_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`   ORDER BY subject_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep [{"number_of_questions":1,"duration":5,"subject_id":1,"dependents":["Exam_Center_Has_Exam","Exam_Has_Question"],"identifying_fields":["id","number_of_questions","duration"],"id":1}]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep []
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep []
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 07:21:19 Europe/Berlin] this one failed subject_id
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep [{"name":"Types","description":"it's about static type systems.","subject_id":2,"dependents":["Question"],"identifying_fields":["name"],"id":1},{"name":"Relativity","description":"Hard","subject_id":2,"dependents":["Question"],"identifying_fields":["name"],"id":2}]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":9} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep []
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 07:21:19 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":9} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:19 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 07:21:19 Europe/Berlin] Subject dep [{"name":"Local Law","description":"the study of Local Law boii","subject_id":9,"dependents":["Question"],"identifying_fields":["name"],"id":3}]
[02-Apr-2022 07:21:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["exam"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 07:21:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `exam`   ORDER BY exam_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 07:21:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 07:21:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 07:21:29 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Center_Has_Exam one_name: Exam many_name: Exam_Center middle_table: Exam_Center_Has_Exam middle_table_one_col: exam_center_has_exam.exam_id middle_table_many_col: exam_center_has_exam.exam_center_id row->id: 1
[02-Apr-2022 07:21:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam_Center","Exam_Center_Has_Exam"] ON_conditions: [{"exam_center.id":"exam_center_has_exam.exam_center_id"},{"exam_center_has_exam.exam_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam_center.id as exam_center_id, exam_center.name as exam_center_name, exam_center.description as exam_center_description, exam_center_has_exam.id as exam_center_has_exam_id, exam_center_has_exam.date as exam_center_has_exam_date, exam_center_has_exam.exam_id as exam_center_has_exam_exam_id, exam_center_has_exam.exam_center_id as exam_center_has_exam_exam_center_id FROM `Exam_Center` JOIN `Exam_Center_Has_Exam` ON (exam_center.id = exam_center_has_exam.exam_center_id) AND (exam_center_has_exam.exam_id = 1)  ORDER BY exam_center_id, exam_center_has_exam_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 07:21:29 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Exam many_name: Question middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.exam_id middle_table_many_col: exam_has_question.question_id row->id: 1
[02-Apr-2022 07:21:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Question","Exam_Has_Question"] ON_conditions: [{"question.id":"exam_has_question.question_id"},{"exam_has_question.exam_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 07:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Question` JOIN `Exam_Has_Question` ON (question.id = exam_has_question.question_id) AND (exam_has_question.exam_id = 1)  ORDER BY question_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:06:35 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 08:06:35 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 08:10:46 Europe/Berlin] dashboard called
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":4} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 08:10:47 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:47 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 08:10:49 Europe/Berlin] more is requested specifically after 8
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":8,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [8]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 08:10:49 Europe/Berlin] more is requested specifically after 16
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":16,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [16]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 08:10:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 08:10:50 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 08:10:50 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 08:10:50 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 08:10:53 Europe/Berlin] this one failed topic_id
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 08:10:53 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:10:53 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 08:10:53 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:10:53 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 08:10:53 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 08:10:53 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 08:10:53 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:10:53 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 08:11:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`   ORDER BY role_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 08:11:05 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep [{"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1},{"username":"NassouhAlOlabi","password":"202cb962ac59075b964b07152d234b70","first_name":"Nassouh","last_name":"AlOlabi","middle_name":"Yasser","profile_picture":null,"role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":2},{"username":"MSmith","password":"e268f98f247841960366c10ea099a67e","first_name":"Michell","last_name":"Smith","middle_name":"car","profile_picture":"MSmith.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":3},{"username":"BrandonFreeman","password":"e268f98f247841960366c10ea099a67e","first_name":"Brandon","last_name":"Freeman","middle_name":"M.","profile_picture":"BrandonFreeman.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":4},{"username":"ColleenDiaz","password":"e268f98f247841960366c10ea099a67e","first_name":"Colleen","last_name":"Diaz","middle_name":"L.","profile_picture":"ColleenDiaz.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":5},{"username":"NicoleFord","password":"e268f98f247841960366c10ea099a67e","first_name":"Nicole","last_name":"Ford","middle_name":"Nancy","profile_picture":"NicoleFord.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":6},{"username":"AddisonOlson","password":"e268f98f247841960366c10ea099a67e","first_name":"Addison","last_name":"Olson","middle_name":"Mike","profile_picture":"AddisonOlson.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":7},{"username":"DouglasFletcher","password":"e268f98f247841960366c10ea099a67e","first_name":"Douglas","last_name":"Fletcher","middle_name":"John","profile_picture":"DouglasFletcher.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":8},{"username":"FloydSteward","password":"e268f98f247841960366c10ea099a67e","first_name":"Floyd","last_name":"Steward","middle_name":"Jack","profile_picture":"FloydSteward.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":9},{"username":"JesseBrown","password":"e268f98f247841960366c10ea099a67e","first_name":"Jesse","last_name":"Brown","middle_name":"Axel","profile_picture":"JesseBrown.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":10},{"username":"OscarMorgan","password":"e268f98f247841960366c10ea099a67e","first_name":"Oscar","last_name":"Morgan","middle_name":"Gotee","profile_picture":"OscarMorgan.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":11},{"username":"SohamPalmer","password":"e268f98f247841960366c10ea099a67e","first_name":"Soham","last_name":"Palmer","middle_name":"Kid","profile_picture":"SohamPalmer.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":12},{"username":"EdithSanchez","password":"e268f98f247841960366c10ea099a67e","first_name":"Edith","last_name":"Sanchez","middle_name":"Blonde","profile_picture":"EdithSanchez.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":13},{"username":"KimSnyder","password":"e268f98f247841960366c10ea099a67e","first_name":"Kim","last_name":"Snyder","middle_name":"Red","profile_picture":"KimSnyder.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":14},{"username":"SandraNeal","password":"e268f98f247841960366c10ea099a67e","first_name":"Sandra","last_name":"Neal","middle_name":"Kim","profile_picture":"SandraNeal.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":15},{"username":"ToniRhodes","password":"e268f98f247841960366c10ea099a67e","first_name":"Toni","last_name":"Rhodes","middle_name":"Jordan","profile_picture":"ToniRhodes.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":16},{"username":"MarcDemo","password":"e268f98f247841960366c10ea099a67e","first_name":"Marc","last_name":"Demo","middle_name":"Angry","profile_picture":"MarcDemo.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":17}]
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 1
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 1)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep []
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 2
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 2)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep []
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 3
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":3}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 3)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":4} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep []
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 4
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":4}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 4)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":5} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep []
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 5
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":5}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 5)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":6} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep [{"username":"testadmin","password":"202cb962ac59075b964b07152d234b70","first_name":"TestCenter","last_name":"Admin","middle_name":null,"profile_picture":null,"role_id":6,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":18}]
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 6
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":6}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 6)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":7} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep []
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 7
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":7}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 7)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep fetch User
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":8} options: {"limit":100,"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 08:11:06 Europe/Berlin] Role dep []
[02-Apr-2022 08:11:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 8
[02-Apr-2022 08:11:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":8}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 08:11:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 8)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":4} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:14:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:14:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:15:20 Europe/Berlin] dashboard called
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":4} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:15:20 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:20 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`   ORDER BY subject_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep []
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep [{"name":"Types","description":"it is about static type systems.","subject_id":1,"dependents":["Question"],"identifying_fields":["name"],"id":1}]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep []
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep []
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep []
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep [{"name":"Relativity","description":"Hard","subject_id":3,"dependents":["Question"],"identifying_fields":["name"],"id":2}]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam"] ON_conditions: [] WHERE_conditions: {"exam.subject_id":4} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id FROM `Exam`  WHERE (exam.subject_id = ?) ORDER BY exam_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep []
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 09:15:24 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Topic"] ON_conditions: [] WHERE_conditions: {"topic.subject_id":4} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:24 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `Topic`  WHERE (topic.subject_id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 09:15:24 Europe/Berlin] Subject dep [{"name":"Local Law","description":"the study of Local Law","subject_id":4,"dependents":["Question"],"identifying_fields":["name"],"id":3}]
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`   ORDER BY role_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep [{"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1},{"username":"NassouhAlOlabi","password":"202cb962ac59075b964b07152d234b70","first_name":"Nassouh","last_name":"AlOlabi","middle_name":"Yasser","profile_picture":null,"role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":2},{"username":"MSmith","password":"e268f98f247841960366c10ea099a67e","first_name":"Michell","last_name":"Smith","middle_name":"car","profile_picture":"MSmith.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":3},{"username":"BrandonFreeman","password":"e268f98f247841960366c10ea099a67e","first_name":"Brandon","last_name":"Freeman","middle_name":"M.","profile_picture":"BrandonFreeman.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":4},{"username":"ColleenDiaz","password":"e268f98f247841960366c10ea099a67e","first_name":"Colleen","last_name":"Diaz","middle_name":"L.","profile_picture":"ColleenDiaz.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":5},{"username":"NicoleFord","password":"e268f98f247841960366c10ea099a67e","first_name":"Nicole","last_name":"Ford","middle_name":"Nancy","profile_picture":"NicoleFord.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":6},{"username":"AddisonOlson","password":"e268f98f247841960366c10ea099a67e","first_name":"Addison","last_name":"Olson","middle_name":"Mike","profile_picture":"AddisonOlson.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":7},{"username":"DouglasFletcher","password":"e268f98f247841960366c10ea099a67e","first_name":"Douglas","last_name":"Fletcher","middle_name":"John","profile_picture":"DouglasFletcher.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":8},{"username":"FloydSteward","password":"e268f98f247841960366c10ea099a67e","first_name":"Floyd","last_name":"Steward","middle_name":"Jack","profile_picture":"FloydSteward.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":9},{"username":"JesseBrown","password":"e268f98f247841960366c10ea099a67e","first_name":"Jesse","last_name":"Brown","middle_name":"Axel","profile_picture":"JesseBrown.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":10},{"username":"OscarMorgan","password":"e268f98f247841960366c10ea099a67e","first_name":"Oscar","last_name":"Morgan","middle_name":"Gotee","profile_picture":"OscarMorgan.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":11},{"username":"SohamPalmer","password":"e268f98f247841960366c10ea099a67e","first_name":"Soham","last_name":"Palmer","middle_name":"Kid","profile_picture":"SohamPalmer.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":12},{"username":"EdithSanchez","password":"e268f98f247841960366c10ea099a67e","first_name":"Edith","last_name":"Sanchez","middle_name":"Blonde","profile_picture":"EdithSanchez.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":13},{"username":"KimSnyder","password":"e268f98f247841960366c10ea099a67e","first_name":"Kim","last_name":"Snyder","middle_name":"Red","profile_picture":"KimSnyder.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":14},{"username":"SandraNeal","password":"e268f98f247841960366c10ea099a67e","first_name":"Sandra","last_name":"Neal","middle_name":"Kim","profile_picture":"SandraNeal.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":15},{"username":"ToniRhodes","password":"e268f98f247841960366c10ea099a67e","first_name":"Toni","last_name":"Rhodes","middle_name":"Jordan","profile_picture":"ToniRhodes.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":16},{"username":"MarcDemo","password":"e268f98f247841960366c10ea099a67e","first_name":"Marc","last_name":"Demo","middle_name":"Angry","profile_picture":"MarcDemo.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":17}]
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 1
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 1)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep []
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 2
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 2)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep []
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 3
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":3}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 3)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":4} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep []
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 4
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":4}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 4)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep []
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 5
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":5}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 5)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep [{"username":"testadmin","password":"202cb962ac59075b964b07152d234b70","first_name":"TestCenter","last_name":"Admin","middle_name":null,"profile_picture":null,"role_id":6,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":18}]
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 6
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":6}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 6)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep []
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 7
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":7}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 7)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep fetch User
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:15:30 Europe/Berlin] Role dep []
[02-Apr-2022 09:15:30 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 8
[02-Apr-2022 09:15:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":8}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 8)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:15:36 Europe/Berlin] this one failed topic_id
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:15:36 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:15:36 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 09:15:36 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:15:36 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:15:36 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 09:15:36 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 09:15:36 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:15:36 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:16:43 Europe/Berlin] dashboard called
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:16:43 Europe/Berlin] this one failed topic_id
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:16:43 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:43 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 09:16:43 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:16:43 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:16:43 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 09:16:43 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 09:16:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:16:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:16:46 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:46 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:16:48 Europe/Berlin] more is requested specifically after 9
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":9,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [9]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 09:16:48 Europe/Berlin] more is requested specifically after 17
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":17,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [17]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:16:48 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 09:16:48 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 09:16:49 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 09:16:49 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:16:49 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 09:18:10 Europe/Berlin] dashboard called
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:18:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:18:12 Europe/Berlin] more is requested specifically after 9
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":9,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [9]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 09:18:12 Europe/Berlin] more is requested specifically after 17
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":17,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [17]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:18:12 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 09:18:12 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 09:18:23 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 09:18:23 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:18:23 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 09:19:54 Europe/Berlin] dashboard called
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:19:55 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:55 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:19:56 Europe/Berlin] more is requested specifically after 9
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":9,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [9]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:19:56 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:56 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 09:19:57 Europe/Berlin] more is requested specifically after 17
[02-Apr-2022 09:19:57 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":17,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:19:57 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [17]
[02-Apr-2022 09:19:57 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:57 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:19:57 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 09:19:57 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 09:20:03 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 09:20:03 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:20:03 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 09:20:25 Europe/Berlin] dashboard called
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:20:26 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:26 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:20:28 Europe/Berlin] more is requested specifically after 9
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":9,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [9]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 09:20:28 Europe/Berlin] more is requested specifically after 17
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":17,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [17]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 09:20:28 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 09:20:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:20:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 09:21:05 Europe/Berlin] dashboard called
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:21:05 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:05 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:21:06 Europe/Berlin] more is requested specifically after 9
[02-Apr-2022 09:21:06 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":9,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:21:06 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [9]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 09:21:07 Europe/Berlin] more is requested specifically after 17
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":17,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [17]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 09:21:07 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 09:21:07 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:21:07 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 09:21:13 Europe/Berlin] BaseModel::wipeByIds Running : "DELETE FROM `user` WHERE id = ?" Bindings :["17"]
[02-Apr-2022 09:21:27 Europe/Berlin] BaseModel::wipeByIds Running : "DELETE FROM `user` WHERE id = ?" Bindings :["18"]
[02-Apr-2022 09:21:29 Europe/Berlin] dashboard called
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:21:30 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:30 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:21:31 Europe/Berlin] more is requested specifically after 9
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":9,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [9]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:21:31 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:21:31 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:21:32 Europe/Berlin] more is requested specifically after 16
[02-Apr-2022 09:21:32 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":16,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:21:32 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [16]
[02-Apr-2022 09:36:50 Europe/Berlin] dashboard called
[02-Apr-2022 09:36:51 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:36:51 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:38:27 Europe/Berlin] dashboard called
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":4} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:28 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 09:38:28 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 09:38:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:38:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 09:38:29 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 09:38:29 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 09:39:16 Europe/Berlin] more is requested specifically after 8
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":8,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [8]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 09:39:16 Europe/Berlin] more is requested specifically after 16
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":16,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [16]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:16 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:16 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:17 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 09:39:17 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:17 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 09:39:17 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:17 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 09:39:17 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 09:39:17 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 09:39:17 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:39:21 Europe/Berlin] this one failed topic_id
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:39:21 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:21 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 09:39:21 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:39:21 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'exam_has_question.exam_id' in 'field list' in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:39:21 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:39:21 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 09:39:21 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 09:39:21 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:39:21 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:39:21 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'exam_has_question.exam_id' in 'field list' in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:39:27 Europe/Berlin] dashboard called
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:39:27 Europe/Berlin] this one failed topic_id
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:39:27 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:39:27 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 09:39:27 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 1
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:39:27 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'exam_has_question.exam_id' in 'field list' in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:39:27 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:39:27 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 09:39:27 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col: exam_has_question.exam_id row->id: 2
[02-Apr-2022 09:39:27 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":"exam_has_question.exam_id"},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:39:27 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_id as exam_has_question_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = exam_has_question.exam_id) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:39:27 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'exam_has_question.exam_id' in 'field list' in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:42:10 Europe/Berlin] dashboard called
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:42:10 Europe/Berlin] this one failed topic_id
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:42:10 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:42:10 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 09:42:10 Europe/Berlin] PHP Notice:  Undefined index: exam_id in C:\xampp\htdocs\mnu\application\models\core\schema.php on line 762
[02-Apr-2022 09:42:10 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 1
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":null},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_center_has_exam_id as exam_has_question_exam_center_has_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = ) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:42:10 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_questio...' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:42:10 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:42:10 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 09:42:10 Europe/Berlin] PHP Notice:  Undefined index: exam_id in C:\xampp\htdocs\mnu\application\models\core\schema.php on line 762
[02-Apr-2022 09:42:10 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 2
[02-Apr-2022 09:42:10 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":null},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:42:10 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_center_has_exam_id as exam_has_question_exam_center_has_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = ) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:42:10 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_questio...' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:45:41 Europe/Berlin] dashboard called
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["question"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT question.id as question_id, question.text as question_text, question.number_of_choices as question_number_of_choices, question.topic_id as question_topic_id FROM `question`   ORDER BY question_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 09:45:41 Europe/Berlin] this one failed topic_id
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["topic"] ON_conditions: [] WHERE_conditions: {"topic.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT topic.id as topic_id, topic.name as topic_name, topic.description as topic_description, topic.subject_id as topic_subject_id FROM `topic`  WHERE (topic.id = ?) ORDER BY topic_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["subject"] ON_conditions: [] WHERE_conditions: {"subject.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT subject.id as subject_id, subject.name as subject_name, subject.description as subject_description FROM `subject`  WHERE (subject.id = ?) ORDER BY subject_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 09:45:41 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 09:45:41 Europe/Berlin] Question dep [{"text":"INT","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":1},{"text":"Long int","is_correct":0,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":2},{"text":"Float","is_correct":1,"question_id":1,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":3}]
[02-Apr-2022 09:45:41 Europe/Berlin] PHP Notice:  Undefined index: exam_id in C:\xampp\htdocs\mnu\application\models\core\schema.php on line 755
[02-Apr-2022 09:45:41 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 1
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":null},{"exam_has_question.question_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_center_has_exam_id as exam_has_question_exam_center_has_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = ) AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:45:41 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND (exam_has_question.question_id = 1)  ORDER BY exam_id, exam_has_questio...' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 09:45:41 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Choice"] ON_conditions: [] WHERE_conditions: {"choice.question_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT choice.id as choice_id, choice.text as choice_text, choice.is_correct as choice_is_correct, choice.question_id as choice_question_id FROM `Choice`  WHERE (choice.question_id = ?) ORDER BY choice_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 09:45:41 Europe/Berlin] Question dep [{"text":"2","is_correct":1,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":4},{"text":"1","is_correct":0,"question_id":2,"dependents":["Student_Took_Exam"],"identifying_fields":["text"],"id":5}]
[02-Apr-2022 09:45:41 Europe/Berlin] PHP Notice:  Undefined index: exam_id in C:\xampp\htdocs\mnu\application\models\core\schema.php on line 755
[02-Apr-2022 09:45:41 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 2
[02-Apr-2022 09:45:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Exam","Exam_Has_Question"] ON_conditions: [{"exam.id":null},{"exam_has_question.question_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 09:45:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT exam.id as exam_id, exam.number_of_questions as exam_number_of_questions, exam.duration as exam_duration, exam.subject_id as exam_subject_id, exam_has_question.id as exam_has_question_id, exam_has_question.question_id as exam_has_question_question_id, exam_has_question.exam_center_has_exam_id as exam_has_question_exam_center_has_exam_id FROM `Exam` JOIN `Exam_Has_Question` ON (exam.id = ) AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_question_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 09:45:41 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND (exam_has_question.question_id = 2)  ORDER BY exam_id, exam_has_questio...' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 320
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`   ORDER BY role_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep [{"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1},{"username":"NassouhAlOlabi","password":"202cb962ac59075b964b07152d234b70","first_name":"Nassouh","last_name":"AlOlabi","middle_name":"Yasser","profile_picture":null,"role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":2},{"username":"MSmith","password":"e268f98f247841960366c10ea099a67e","first_name":"Michell","last_name":"Smith","middle_name":"car","profile_picture":"MSmith.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":3},{"username":"BrandonFreeman","password":"e268f98f247841960366c10ea099a67e","first_name":"Brandon","last_name":"Freeman","middle_name":"M.","profile_picture":"BrandonFreeman.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":4},{"username":"ColleenDiaz","password":"e268f98f247841960366c10ea099a67e","first_name":"Colleen","last_name":"Diaz","middle_name":"L.","profile_picture":"ColleenDiaz.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":5},{"username":"NicoleFord","password":"e268f98f247841960366c10ea099a67e","first_name":"Nicole","last_name":"Ford","middle_name":"Nancy","profile_picture":"NicoleFord.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":6},{"username":"AddisonOlson","password":"e268f98f247841960366c10ea099a67e","first_name":"Addison","last_name":"Olson","middle_name":"Mike","profile_picture":"AddisonOlson.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":7},{"username":"DouglasFletcher","password":"e268f98f247841960366c10ea099a67e","first_name":"Douglas","last_name":"Fletcher","middle_name":"John","profile_picture":"DouglasFletcher.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":8},{"username":"FloydSteward","password":"e268f98f247841960366c10ea099a67e","first_name":"Floyd","last_name":"Steward","middle_name":"Jack","profile_picture":"FloydSteward.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":9},{"username":"JesseBrown","password":"e268f98f247841960366c10ea099a67e","first_name":"Jesse","last_name":"Brown","middle_name":"Axel","profile_picture":"JesseBrown.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":10},{"username":"OscarMorgan","password":"e268f98f247841960366c10ea099a67e","first_name":"Oscar","last_name":"Morgan","middle_name":"Gotee","profile_picture":"OscarMorgan.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":11},{"username":"SohamPalmer","password":"e268f98f247841960366c10ea099a67e","first_name":"Soham","last_name":"Palmer","middle_name":"Kid","profile_picture":"SohamPalmer.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":12},{"username":"EdithSanchez","password":"e268f98f247841960366c10ea099a67e","first_name":"Edith","last_name":"Sanchez","middle_name":"Blonde","profile_picture":"EdithSanchez.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":13},{"username":"KimSnyder","password":"e268f98f247841960366c10ea099a67e","first_name":"Kim","last_name":"Snyder","middle_name":"Red","profile_picture":"KimSnyder.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":14},{"username":"SandraNeal","password":"e268f98f247841960366c10ea099a67e","first_name":"Sandra","last_name":"Neal","middle_name":"Kim","profile_picture":"SandraNeal.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":15},{"username":"ToniRhodes","password":"e268f98f247841960366c10ea099a67e","first_name":"Toni","last_name":"Rhodes","middle_name":"Jordan","profile_picture":"ToniRhodes.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":16},{"username":"MarcDemo","password":"e268f98f247841960366c10ea099a67e","first_name":"Marc","last_name":"Demo","middle_name":"Angry","profile_picture":"MarcDemo.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":17}]
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 1
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 1)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep []
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 2
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 2)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep []
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 3
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":3}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 3)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":4} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep []
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 4
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":4}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 4)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":5} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep []
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 5
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":5}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 5)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":6} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep [{"username":"testadmin","password":"202cb962ac59075b964b07152d234b70","first_name":"TestCenter","last_name":"Admin","middle_name":null,"profile_picture":null,"role_id":6,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":18}]
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 6
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":6}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 6)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":7} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep []
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 7
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":7}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 7)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":8} options: {"limit":100,"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 10:34:00 Europe/Berlin] Role dep []
[02-Apr-2022 10:34:00 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 8
[02-Apr-2022 10:34:00 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":8}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:34:00 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 8)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] dashboard called
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: [] options: {"limit":30,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`   ORDER BY role_id  LIMIT 30 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep [{"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1},{"username":"NassouhAlOlabi","password":"202cb962ac59075b964b07152d234b70","first_name":"Nassouh","last_name":"AlOlabi","middle_name":"Yasser","profile_picture":null,"role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":2},{"username":"MSmith","password":"e268f98f247841960366c10ea099a67e","first_name":"Michell","last_name":"Smith","middle_name":"car","profile_picture":"MSmith.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":3},{"username":"BrandonFreeman","password":"e268f98f247841960366c10ea099a67e","first_name":"Brandon","last_name":"Freeman","middle_name":"M.","profile_picture":"BrandonFreeman.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":4},{"username":"ColleenDiaz","password":"e268f98f247841960366c10ea099a67e","first_name":"Colleen","last_name":"Diaz","middle_name":"L.","profile_picture":"ColleenDiaz.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":5},{"username":"NicoleFord","password":"e268f98f247841960366c10ea099a67e","first_name":"Nicole","last_name":"Ford","middle_name":"Nancy","profile_picture":"NicoleFord.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":6},{"username":"AddisonOlson","password":"e268f98f247841960366c10ea099a67e","first_name":"Addison","last_name":"Olson","middle_name":"Mike","profile_picture":"AddisonOlson.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":7},{"username":"DouglasFletcher","password":"e268f98f247841960366c10ea099a67e","first_name":"Douglas","last_name":"Fletcher","middle_name":"John","profile_picture":"DouglasFletcher.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":8},{"username":"FloydSteward","password":"e268f98f247841960366c10ea099a67e","first_name":"Floyd","last_name":"Steward","middle_name":"Jack","profile_picture":"FloydSteward.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":9},{"username":"JesseBrown","password":"e268f98f247841960366c10ea099a67e","first_name":"Jesse","last_name":"Brown","middle_name":"Axel","profile_picture":"JesseBrown.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":10},{"username":"OscarMorgan","password":"e268f98f247841960366c10ea099a67e","first_name":"Oscar","last_name":"Morgan","middle_name":"Gotee","profile_picture":"OscarMorgan.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":11},{"username":"SohamPalmer","password":"e268f98f247841960366c10ea099a67e","first_name":"Soham","last_name":"Palmer","middle_name":"Kid","profile_picture":"SohamPalmer.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":12},{"username":"EdithSanchez","password":"e268f98f247841960366c10ea099a67e","first_name":"Edith","last_name":"Sanchez","middle_name":"Blonde","profile_picture":"EdithSanchez.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":13},{"username":"KimSnyder","password":"e268f98f247841960366c10ea099a67e","first_name":"Kim","last_name":"Snyder","middle_name":"Red","profile_picture":"KimSnyder.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":14},{"username":"SandraNeal","password":"e268f98f247841960366c10ea099a67e","first_name":"Sandra","last_name":"Neal","middle_name":"Kim","profile_picture":"SandraNeal.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":15},{"username":"ToniRhodes","password":"e268f98f247841960366c10ea099a67e","first_name":"Toni","last_name":"Rhodes","middle_name":"Jordan","profile_picture":"ToniRhodes.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":16},{"username":"MarcDemo","password":"e268f98f247841960366c10ea099a67e","first_name":"Marc","last_name":"Demo","middle_name":"Angry","profile_picture":"MarcDemo.jpg","role_id":1,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":17}]
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 1
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":1}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 1)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":2} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep []
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 2
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":2}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 2)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":3} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep []
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 3
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":3}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 3)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":4} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep []
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 4
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":4}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 4)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":5} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep []
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 5
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":5}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 5)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":6} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep [{"username":"testadmin","password":"202cb962ac59075b964b07152d234b70","first_name":"TestCenter","last_name":"Admin","middle_name":null,"profile_picture":null,"role_id":6,"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":18}]
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 6
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":6}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 6)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":7} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep []
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 7
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":7}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 7)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep fetch User
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["User"] ON_conditions: [] WHERE_conditions: {"user.role_id":8} options: {"limit":100,"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `User`  WHERE (user.role_id = ?) ORDER BY user_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 10:37:33 Europe/Berlin] Role dep []
[02-Apr-2022 10:37:33 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Role many_name: Permission middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.role_id middle_table_many_col: role_has_permission.permission_id row->id: 8
[02-Apr-2022 10:37:33 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Permission","Role_Has_Permission"] ON_conditions: [{"permission.id":"role_has_permission.permission_id"},{"role_has_permission.role_id":8}] WHERE_conditions: [] options: {"override":false}
[02-Apr-2022 10:37:33 Europe/Berlin] BaseModel::__select_stmt Running : SELECT permission.id as permission_id, permission.name as permission_name, role_has_permission.id as role_has_permission_id, role_has_permission.role_id as role_has_permission_role_id, role_has_permission.permission_id as role_has_permission_permission_id FROM `Permission` JOIN `Role_Has_Permission` ON (permission.id = role_has_permission.permission_id) AND (role_has_permission.role_id = 8)  ORDER BY permission_id, role_has_permission_id  LIMIT 100 ; with bindings : []
[02-Apr-2022 10:51:40 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: [] options: {"limit":8,"override":false}
[02-Apr-2022 10:51:40 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`   ORDER BY user_id  LIMIT 8 ; with bindings : []
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":2} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [2]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":3} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [3]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":4} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [4]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":5} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [5]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":7} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [7]
[02-Apr-2022 10:51:41 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":8} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:41 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [8]
[02-Apr-2022 10:51:43 Europe/Berlin] more is requested specifically after 8
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":8,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [8]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":9} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [9]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":10} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [10]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":11} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [11]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":12} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [12]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":13} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [13]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":14} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [14]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":15} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [15]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":16} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [16]
[02-Apr-2022 10:51:43 Europe/Berlin] more is requested specifically after 16
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":16,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [16]
[02-Apr-2022 10:51:43 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":1} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:43 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [1]
[02-Apr-2022 10:51:44 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["role"] ON_conditions: [] WHERE_conditions: {"role.id":6} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:44 Europe/Berlin] BaseModel::__select_stmt Running : SELECT role.id as role_id, role.name as role_name FROM `role`  WHERE (role.id = ?) ORDER BY role_id  LIMIT 100 ; with bindings : [6]
[02-Apr-2022 10:51:44 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":17} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:44 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [17]
[02-Apr-2022 10:51:44 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["Student"] ON_conditions: [] WHERE_conditions: {"student.id":18} options: {"limit":100,"override":false}
[02-Apr-2022 10:51:44 Europe/Berlin] BaseModel::__select_stmt Running : SELECT student.id as student_id, student.enroll_date as student_enroll_date FROM `Student`  WHERE (student.id = ?) ORDER BY student_id  LIMIT 100 ; with bindings : [18]
[02-Apr-2022 10:51:45 Europe/Berlin] more is requested specifically after 18
[02-Apr-2022 10:51:45 Europe/Berlin] __select_stmt columns: [] schemaClasses: ["user"] ON_conditions: [] WHERE_conditions: {"user.id":18,"op":">"} options: {"limit":8,"override":false}
[02-Apr-2022 10:51:45 Europe/Berlin] BaseModel::__select_stmt Running : SELECT user.id as user_id, user.username as user_username, user.password as user_password, user.first_name as user_first_name, user.last_name as user_last_name, user.middle_name as user_middle_name, user.profile_picture as user_profile_picture, user.role_id as user_role_id FROM `user`  WHERE (user.id > ?) ORDER BY user_id  LIMIT 8 ; with bindings : [18]
[02-Apr-2022 11:13:47 Europe/Berlin] dashboard called
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:13:47 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] dashboard called
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","middle_name","profile_picture","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:08 Europe/Berlin] big: ["id","username","password","first_name","last_name","role_id"] small: ["middle_name","profile_picture"]
[02-Apr-2022 11:14:58 Europe/Berlin] dashboard called
[02-Apr-2022 11:15:16 Europe/Berlin] dashboard called
[02-Apr-2022 11:15:29 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 11:15:29 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 1
[02-Apr-2022 11:15:29 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 11:15:29 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 2
[02-Apr-2022 12:19:30 Europe/Berlin] dashboard called
[02-Apr-2022 12:19:30 Europe/Berlin] dashboard called
[02-Apr-2022 12:19:31 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:31 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 1
[02-Apr-2022 12:19:31 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:31 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 2
[02-Apr-2022 12:19:31 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:31 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 3
[02-Apr-2022 12:19:31 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:31 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 4
[02-Apr-2022 12:19:36 Europe/Berlin] more is requested specifically after 8
[02-Apr-2022 12:19:36 Europe/Berlin] more is requested specifically after 16
[02-Apr-2022 12:19:38 Europe/Berlin] more is requested specifically after 25
[02-Apr-2022 12:19:40 Europe/Berlin] more is requested specifically after 31
[02-Apr-2022 12:19:46 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:46 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 1
[02-Apr-2022 12:19:46 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:46 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 2
[02-Apr-2022 12:19:46 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:46 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 3
[02-Apr-2022 12:19:46 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:19:46 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Exam_Has_Question one_name: Question many_name: Exam middle_table: Exam_Has_Question middle_table_one_col: exam_has_question.question_id middle_table_many_col:  row->id: 4
[02-Apr-2022 12:37:00 Europe/Berlin] dashboard called
[02-Apr-2022 12:37:01 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:37:01 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Student_Exam_Has_Question one_name: Question many_name: Student_Exam middle_table: Student_Exam_Has_Question middle_table_one_col: student_exam_has_question.question_id middle_table_many_col: student_exam_has_question.student_exam_id row->id: 1
[02-Apr-2022 12:37:01 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:37:01 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Student_Exam_Has_Question one_name: Question many_name: Student_Exam middle_table: Student_Exam_Has_Question middle_table_one_col: student_exam_has_question.question_id middle_table_many_col: student_exam_has_question.student_exam_id row->id: 2
[02-Apr-2022 12:37:01 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:37:01 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Student_Exam_Has_Question one_name: Question many_name: Student_Exam middle_table: Student_Exam_Has_Question middle_table_one_col: student_exam_has_question.question_id middle_table_many_col: student_exam_has_question.student_exam_id row->id: 3
[02-Apr-2022 12:37:01 Europe/Berlin] Question dep fetch Choice
[02-Apr-2022 12:37:01 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Student_Exam_Has_Question one_name: Question many_name: Student_Exam middle_table: Student_Exam_Has_Question middle_table_one_col: student_exam_has_question.question_id middle_table_many_col: student_exam_has_question.student_exam_id row->id: 4
[02-Apr-2022 12:37:06 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Student_Exam_Has_Choice one_name: Exam_Center many_name: Student_ExamChoice middle_table: Student_Exam_Has_Choice middle_table_one_col:  middle_table_many_col:  row->id: 1
[02-Apr-2022 12:37:06 Europe/Berlin] $_POST [] failed Caught exception: Class 'Student_ExamChoice' not found
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Exam
[02-Apr-2022 12:37:10 Europe/Berlin] Subject dep fetch Topic
[02-Apr-2022 12:37:12 Europe/Berlin] more is requested specifically after 23
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 1
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 2
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 3
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 4
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 5
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 6
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 7
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 8
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 9
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 10
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 11
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 12
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 13
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 14
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 15
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 16
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 17
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 18
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 19
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 20
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 21
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 22
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 23
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 24
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 25
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 26
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 27
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 28
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 29
[02-Apr-2022 12:37:17 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 30
[02-Apr-2022 12:37:19 Europe/Berlin] more is requested specifically after 30
[02-Apr-2022 12:37:19 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 31
[02-Apr-2022 12:37:19 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 32
[02-Apr-2022 12:37:19 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 33
[02-Apr-2022 12:37:19 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 34
[02-Apr-2022 12:37:19 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 35
[02-Apr-2022 12:37:19 Europe/Berlin] ->>jump over many2many table :: $dep<<<----dep: Role_Has_Permission one_name: Permission many_name: Role middle_table: Role_Has_Permission middle_table_one_col: role_has_permission.permission_id middle_table_many_col: role_has_permission.role_id row->id: 36
[02-Apr-2022 12:37:20 Europe/Berlin] more is requested specifically after 36
[02-Apr-2022 12:37:26 Europe/Berlin] $_POST [] failed Caught exception: Class 'student_took_exam' not found
[02-Apr-2022 12:38:50 Europe/Berlin] dashboard called
[02-Apr-2022 12:38:50 Europe/Berlin] $_POST [] failed Caught exception: Class 'student_took_exam' not found
[02-Apr-2022 12:40:05 Europe/Berlin] dashboard called
[02-Apr-2022 12:40:05 Europe/Berlin] $_POST [] failed Caught exception: Class 'student_took_exam' not found
[02-Apr-2022 12:48:49 Europe/Berlin] dashboard called
[02-Apr-2022 12:51:10 Europe/Berlin] dashboard called
[02-Apr-2022 12:51:28 Europe/Berlin] dashboard called
[02-Apr-2022 12:51:57 Europe/Berlin] dashboard called
[02-Apr-2022 12:58:24 Europe/Berlin] dashboard called
[02-Apr-2022 13:02:58 Europe/Berlin] dashboard called
[02-Apr-2022 13:10:32 Europe/Berlin] dashboard called
[02-Apr-2022 13:14:53 Europe/Berlin] USERMODEL
[02-Apr-2022 13:14:56 Europe/Berlin] USERMODEL
[02-Apr-2022 13:14:56 Europe/Berlin] username = NasoohOlabi and password = 1234
[02-Apr-2022 13:14:56 Europe/Berlin] getFullDetails with username NasoohOlabi and password 1234
[02-Apr-2022 13:14:56 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 13:21:48 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:21:48 Europe/Berlin] PHP Fatal error:  Uncaught Error: Call to undefined method ExamModel::getAllExam() in C:\xampp\htdocs\mnu\application\controller\exams.php:18
Stack trace:
#0 C:\xampp\htdocs\mnu\application\libs\application.php(56): Exams->index()
#1 C:\xampp\htdocs\mnu\index.php(88): Application->__construct()
#2 {main}
  thrown in C:\xampp\htdocs\mnu\application\controller\exams.php on line 18
[02-Apr-2022 13:22:08 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:22:08 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:28:00 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:28:00 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:33:49 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:33:49 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:36:15 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:36:15 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:36:50 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:36:50 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:37:18 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:37:18 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:37:58 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:37:58 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:38:22 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:38:22 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:43:24 Europe/Berlin] dashboard called
[02-Apr-2022 13:44:52 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:44:52 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:48:33 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:48:33 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:48:53 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:48:53 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:49:16 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:49:16 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 13:50:12 Europe/Berlin] Exam Model Loaded
[02-Apr-2022 13:50:12 Europe/Berlin] BaseModel::getAll Running : "SELECT * FROM exam"
[02-Apr-2022 14:03:54 Europe/Berlin] USERMODEL
[02-Apr-2022 14:03:57 Europe/Berlin] dashboard called
[02-Apr-2022 14:04:05 Europe/Berlin] dashboard called
[02-Apr-2022 14:04:56 Europe/Berlin] dashboard called
[02-Apr-2022 20:50:37 Europe/Berlin] USERMODEL
[02-Apr-2022 20:50:39 Europe/Berlin] USERMODEL
[02-Apr-2022 20:50:45 Europe/Berlin] USERMODEL
[02-Apr-2022 20:50:45 Europe/Berlin] username = newuser and password = 123
[02-Apr-2022 20:51:34 Europe/Berlin] USERMODEL
[02-Apr-2022 20:51:37 Europe/Berlin] USERMODEL
[02-Apr-2022 20:51:37 Europe/Berlin] username = newuser and password = 123
[02-Apr-2022 20:51:37 Europe/Berlin] getFullDetails with username newuser and password 123
[02-Apr-2022 20:51:37 Europe/Berlin] newuser details looked up : {"username":"newuser","password":"202cb962ac59075b964b07152d234b70","first_name":"New","last_name":"User","middle_name":"","profile_picture":null,"role_id":2,"role":{"name":"Student","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":2},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":24}
[02-Apr-2022 20:54:44 Europe/Berlin] dashboard called
[02-Apr-2022 20:56:03 Europe/Berlin] USERMODEL
[02-Apr-2022 20:56:07 Europe/Berlin] USERMODEL
[02-Apr-2022 20:56:07 Europe/Berlin] username = NasoohOlabi and password = 1234
[02-Apr-2022 20:56:07 Europe/Berlin] getFullDetails with username NasoohOlabi and password 1234
[02-Apr-2022 20:56:07 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 20:56:11 Europe/Berlin] dashboard called
[02-Apr-2022 20:56:35 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 20:56:35 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 20:56:35 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 20:56:35 Europe/Berlin] ["4"]
[02-Apr-2022 20:56:35 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 20:56:35 Europe/Berlin] bindings ["4",3]
[02-Apr-2022 20:56:35 Europe/Berlin] USERMODEL
[02-Apr-2022 20:56:35 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 20:56:35 Europe/Berlin]  details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 20:56:37 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 20:56:37 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 20:56:37 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 20:56:37 Europe/Berlin] ["4"]
[02-Apr-2022 20:56:37 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 20:56:37 Europe/Berlin] bindings ["4",3]
[02-Apr-2022 20:56:37 Europe/Berlin] USERMODEL
[02-Apr-2022 20:56:37 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 20:56:37 Europe/Berlin]  details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 20:58:13 Europe/Berlin] dashboard called
[02-Apr-2022 20:58:30 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 20:58:30 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 20:58:30 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 20:58:30 Europe/Berlin] ["2"]
[02-Apr-2022 20:58:30 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 20:58:30 Europe/Berlin] bindings ["2",3]
[02-Apr-2022 20:58:30 Europe/Berlin] USERMODEL
[02-Apr-2022 20:58:30 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 20:58:30 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 20:58:38 Europe/Berlin] dashboard called
[02-Apr-2022 21:02:10 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 21:02:10 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 21:02:10 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 21:02:10 Europe/Berlin] ["1"]
[02-Apr-2022 21:02:10 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 21:02:10 Europe/Berlin] bindings ["1",3]
[02-Apr-2022 21:02:10 Europe/Berlin] USERMODEL
[02-Apr-2022 21:02:10 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:02:10 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 21:08:23 Europe/Berlin] dashboard called
[02-Apr-2022 21:08:36 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 21:08:36 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 21:08:36 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 21:08:36 Europe/Berlin] ["4"]
[02-Apr-2022 21:08:36 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 21:08:36 Europe/Berlin] bindings ["4",3]
[02-Apr-2022 21:08:36 Europe/Berlin] USERMODEL
[02-Apr-2022 21:08:36 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:08:36 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 21:08:53 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 21:08:53 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 21:08:53 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 21:08:53 Europe/Berlin] ["2"]
[02-Apr-2022 21:08:53 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 21:08:53 Europe/Berlin] bindings ["2",3]
[02-Apr-2022 21:08:53 Europe/Berlin] USERMODEL
[02-Apr-2022 21:08:53 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:08:53 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 21:09:02 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 21:09:02 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 21:09:02 Europe/Berlin] {"2":"topic_id"}
[02-Apr-2022 21:09:02 Europe/Berlin] ["4"]
[02-Apr-2022 21:09:02 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET `topic_id` = ? WHERE id = ?"
[02-Apr-2022 21:09:02 Europe/Berlin] bindings ["4",3]
[02-Apr-2022 21:09:02 Europe/Berlin] USERMODEL
[02-Apr-2022 21:09:02 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:09:02 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 21:12:45 Europe/Berlin] BaseModel::experimental_insert Running : "INSERT INTO `Question` (text, number_of_choices, topic_id) VALUES (?, ?, ?)"
[02-Apr-2022 21:12:45 Europe/Berlin] bindings ["if x+1=3 then x = ?",3,2]
[02-Apr-2022 21:12:45 Europe/Berlin] BaseModel::experimental_insert Running : "INSERT INTO `Choice` (text, is_correct, question_id) VALUES (?, ?, ?)"
[02-Apr-2022 21:12:45 Europe/Berlin] bindings ["x = 2",0,100]
[02-Apr-2022 21:12:45 Europe/Berlin] BaseModel::experimental_insert Running : "INSERT INTO `Choice` (text, is_correct, question_id) VALUES (?, ?, ?)"
[02-Apr-2022 21:12:45 Europe/Berlin] bindings ["x = -1",0,100]
[02-Apr-2022 21:12:45 Europe/Berlin] BaseModel::experimental_insert Running : "INSERT INTO `Choice` (text, is_correct, question_id) VALUES (?, ?, ?)"
[02-Apr-2022 21:12:45 Europe/Berlin] bindings ["x = 10",0,100]
[02-Apr-2022 21:12:51 Europe/Berlin] dashboard called
[02-Apr-2022 21:13:15 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 21:13:15 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 21:13:15 Europe/Berlin] []
[02-Apr-2022 21:13:15 Europe/Berlin] []
[02-Apr-2022 21:13:15 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET  WHERE id = ?"
[02-Apr-2022 21:13:15 Europe/Berlin] bindings [100]
[02-Apr-2022 21:13:15 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE id = '100'' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 235
[02-Apr-2022 21:13:37 Europe/Berlin] dashboard called
[02-Apr-2022 21:15:41 Europe/Berlin] ["id","text","number_of_choices","topic_id"]
[02-Apr-2022 21:15:41 Europe/Berlin] ["text","number_of_choices","topic_id"]
[02-Apr-2022 21:15:41 Europe/Berlin] []
[02-Apr-2022 21:15:41 Europe/Berlin] []
[02-Apr-2022 21:15:41 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `question` SET  WHERE id = ?"
[02-Apr-2022 21:15:41 Europe/Berlin] bindings [100]
[02-Apr-2022 21:15:41 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE id = '100'' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 235
[02-Apr-2022 21:29:00 Europe/Berlin] dashboard called
[02-Apr-2022 21:29:18 Europe/Berlin] ["id","text","is_correct","question_id"]
[02-Apr-2022 21:29:18 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:29:18 Europe/Berlin] []
[02-Apr-2022 21:29:18 Europe/Berlin] []
[02-Apr-2022 21:29:18 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `choice` SET  WHERE id = ?"
[02-Apr-2022 21:29:18 Europe/Berlin] bindings [100]
[02-Apr-2022 21:29:18 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE id = '100'' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 235
[02-Apr-2022 21:31:07 Europe/Berlin] dashboard called
[02-Apr-2022 21:31:20 Europe/Berlin] ["id","text","is_correct","question_id"]
[02-Apr-2022 21:31:20 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:31:20 Europe/Berlin] []
[02-Apr-2022 21:31:20 Europe/Berlin] []
[02-Apr-2022 21:31:20 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `choice` SET  WHERE id = ?"
[02-Apr-2022 21:31:20 Europe/Berlin] bindings [100]
[02-Apr-2022 21:31:20 Europe/Berlin] PHP Warning:  PDOStatement::execute(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE id = '100'' at line 1 in C:\xampp\htdocs\mnu\application\models\basemodel.php on line 235
[02-Apr-2022 21:31:38 Europe/Berlin] dashboard called
[02-Apr-2022 21:31:53 Europe/Berlin] ["id","text","is_correct","question_id"]
[02-Apr-2022 21:31:53 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:31:53 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:31:53 Europe/Berlin] ["x = 2","1","100"]
[02-Apr-2022 21:31:53 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `choice` SET `text` = ?, `is_correct` = ?, `question_id` = ? WHERE id = ?"
[02-Apr-2022 21:31:53 Europe/Berlin] bindings ["x = 2","1","100",100]
[02-Apr-2022 21:31:53 Europe/Berlin] USERMODEL
[02-Apr-2022 21:31:53 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:31:53 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 21:32:05 Europe/Berlin] dashboard called
[02-Apr-2022 21:38:32 Europe/Berlin] dashboard called
[02-Apr-2022 21:39:42 Europe/Berlin] dashboard called
[02-Apr-2022 21:41:46 Europe/Berlin] dashboard called
[02-Apr-2022 21:46:54 Europe/Berlin] dashboard called
[02-Apr-2022 21:47:05 Europe/Berlin] ["id","text","is_correct","question_id"]
[02-Apr-2022 21:47:05 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:47:05 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:47:05 Europe/Berlin] ["x = 2","0","100"]
[02-Apr-2022 21:47:05 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `choice` SET `text` = ?, `is_correct` = ?, `question_id` = ? WHERE id = ?"
[02-Apr-2022 21:47:05 Europe/Berlin] bindings ["x = 2","0","100",100]
[02-Apr-2022 21:47:05 Europe/Berlin] USERMODEL
[02-Apr-2022 21:47:05 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:47:05 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
[02-Apr-2022 21:47:09 Europe/Berlin] dashboard called
[02-Apr-2022 21:47:19 Europe/Berlin] ["id","text","is_correct","question_id"]
[02-Apr-2022 21:47:19 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:47:19 Europe/Berlin] ["text","is_correct","question_id"]
[02-Apr-2022 21:47:19 Europe/Berlin] ["x = 2","1","100"]
[02-Apr-2022 21:47:19 Europe/Berlin] BaseModel::experimental_update Running : "UPDATE `choice` SET `text` = ?, `is_correct` = ?, `question_id` = ? WHERE id = ?"
[02-Apr-2022 21:47:19 Europe/Berlin] bindings ["x = 2","1","100",100]
[02-Apr-2022 21:47:19 Europe/Berlin] USERMODEL
[02-Apr-2022 21:47:19 Europe/Berlin] getFullDetails with id 1
[02-Apr-2022 21:47:19 Europe/Berlin] NasoohOlabi details looked up : {"username":"NasoohOlabi","password":"81dc9bdb52d04dc20036dbd8313ed055","first_name":"Nasooh","last_name":"Olabi","middle_name":"Yaser","profile_picture":"NasoohOlabi.jpg","role_id":1,"role":{"name":"ROOT::ADMIN","dependents":["User","Role_Has_Permission"],"identifying_fields":["name"],"id":1},"dependents":[{"Student":"id"}],"identifying_fields":["username"],"id":1}
